Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
	SELECT COUNT(*)
	FROM attribute

ii. Business table = 10000
	SELECT COUNT(*)
	FROM business

iii. Category table = 10000
	SELECT COUNT(*)
	FROM category

iv. Checkin table = 10000
	SELECT COUNT(*)
	FROM checkin

v. elite_years table = 10000
	SELECT COUNT(*)
	FROM elite_years

vi. friend table = 10000
	SELECT COUNT(*)
	FROM friend

vii. hours table = 10000
	SELECT COUNT(*)
	FROM hours

viii. photo table = 10000
	SELECT COUNT(*)
	FROM photo

ix. review table = 10000
	SELECT COUNT(*)
	FROM review

x. tip table = 10000
	SELECT COUNT(*)
	FROM tip

xi. user table = 10000
	SELECT COUNT(*)
	FROM user	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
	SELECT COUNT(DISTINCT id)
	FROM business

ii. Hours = 1526
	SELECT COUNT(DISTINCT business_id)
	FROM hours

iii. Category = 2643
	SELECT COUNT(DISTINCT business_id)
	FROM category

iv. Attribute = 1115
	SELECT COUNT(DISTINCT business_id)
	FROM attribute

v. Review = 10000
	SELECT COUNT(DISTINCT id)
	FROM review

vi. Checkin = 493
	SELECT COUNT(DISTINCT business_id)
	FROM checkin

vii. Photo = 10000
	SELECT COUNT(DISTINCT id)
	FROM photo

viii. Tip = 537
	SELECT COUNT(DISTINCT user_id) —foreign key: user_id
	FROM tip

ix. User = 10000
	SELECT COUNT(DISTINCT id)
	FROM user

x. Friend = 11
	SELECT COUNT(DISTINCT user_id)
	FROM friend

xi. Elite_years = 2780
	SELECT COUNT(DISTINCT user_id)
	FROM elite_years


Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	
	SELECT id, name, review_count, yelping_since, useful, funny, cool, fans, 	average_stars, 
               compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, 
               compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos
	FROM user
	WHERE id is null
    		or name is null
    		or review_count is null
    		or yelping_since is null
    		or useful is null
    		or funny is null
    		or cool is null
    		or fans is null
    		or average_stars is null
    		or compliment_hot is null
    		or compliment_more is null
    		or compliment_profile is null
    		or compliment_cute is null
    		or compliment_list is null
    		or compliment_note is null
    		or compliment_plain is null
    		or compliment_cool is null
    		or compliment_funny is null
    		or compliment_writer is null
    		or compliment_photos is null

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		SELECT MIN(Stars), MAX(Stars), AVG(Stars)
		FROM review	
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549
		SELECT MIN(Stars), MAX(Stars), AVG(Stars)
		FROM business

		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		SELECT MIN(likes), MAX(likes), AVG(likes)
		FROM tip

	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		SELECT MIN(Count), MAX(Count), AVG(Count)
		FROM checkin
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		SELECT MIN(Review_count), MAX(Review_count), AVG(Review_count)
		FROM user

	

5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	SELECT city, SUM(review_count) as total_review
	FROM business
	GROUP BY city
	ORDER BY total_review DESC
	
	Copy and Paste the Result Below:
+-----------------+--------------+
| city            | total_review |
+-----------------+--------------+
| Las Vegas       |        82854 |
| Phoenix         |        34503 |
| Toronto         |        24113 |
| Scottsdale      |        20614 |
| Charlotte       |        12523 |
| Henderson       |        10871 |
| Tempe           |        10504 |
| Pittsburgh      |         9798 |
| Montréal        |         9448 |
| Chandler        |         8112 |
| Mesa            |         6875 |
| Gilbert         |         6380 |
| Cleveland       |         5593 |
| Madison         |         5265 |
| Glendale        |         4406 |
| Mississauga     |         3814 |
| Edinburgh       |         2792 |
| Peoria          |         2624 |
| North Las Vegas |         2438 |
| Markham         |         2352 |
| Champaign       |         2029 |
| Stuttgart       |         1849 |
| Surprise        |         1520 |
| Lakewood        |         1465 |
| Goodyear        |         1155 |
+-----------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT DISTINCT stars, COUNT(stars) as frequency
FROM business
GROUP BY city, stars
HAVING city == 'Avon'

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-----------+
| stars | frequency |
+-------+-----------+
|   1.5 |         1 |
|   2.5 |         2 |
|   3.5 |         3 |
|   4.0 |         2 |
|   4.5 |         1 |
|   5.0 |         1 |
+-------+-----------+

ii. Beachwood

SQL code used to arrive at answer:
SELECT DISTINCT stars, COUNT(stars) as frequency
FROM business
GROUP BY city, stars
HAVING city == 'Beachwood'

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-----------+
| stars | frequency |
+-------+-----------+
|   2.0 |         1 |
|   2.5 |         1 |
|   3.0 |         2 |
|   3.5 |         2 |
|   4.0 |         1 |
|   4.5 |         2 |
|   5.0 |         5 |
+-------+-----------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
		SELECT name, SUM(review_count) as total_reviews
		FROM user
		GROUP BY id
		ORDER BY total_reviews DESC
		LIMIT 3

	Copy and Paste the Result Below:
+--------+---------------+
| name   | total_reviews |
+--------+---------------+
| Gerald |          2000 |
| Sara   |          1629 |
| Yuri   |          1339 |
+--------+---------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	No, posing more reviews does not correlate with more fans as based on the below table, some reviewers have posted a lot of reviews but they still have pretty low number of fans (e.g: Eric has posted 1116 reviews but has only 16 fans)

	SELECT name, review_count, fans 
	FROM user
	ORDER BY review_count DESC
	LIMIT 15

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
+-----------+--------------+------+


	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: More reviews with love

+----------------+-------+
| review_quality | count |
+----------------+-------+
| hate           |   178 |
| love           |  1780 |
| others         |  8042 |
+----------------+-------+
	
	SQL code used to arrive at answer:

	SELECT review_quality, COUNT(review_quality) as count
	FROM
    		(SELECT *,
        		CASE WHEN text LIKE '%love%' THEN 'love'
            		WHEN text LIKE '%hate%' THEN 'hate' 
            		ELSE 'others'
        		END AS review_quality
    		FROM review)
	GROUP BY review_quality
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT name, fans 
	FROM user 
	ORDER BY fans DESC
	LIMIT 10
	
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
I picked Toronto and Restaurants because Restaurants are the most popular category there

+----------------+-------+
| category       | count |
+----------------+-------+
| Restaurants    |    71 |
| Food           |    23 |
| Pubs           |     5 |
| Specialty Food |     5 |
| Sushi Bars     |     4 |
+----------------+-------+

i. Do the two groups you chose to analyze have a different distribution of hours?
- Most of restaurants with 2-3 stars open in the morning while restaurants with 4-5 stars open later from 18:00 to 23:00

- 2-3 stars restaurants:
+-------------+-------------+-----------+
| category    | open_hours  | frequency |
+-------------+-------------+-----------+
| Restaurants | 10:30-21:00 |        18 |
| Restaurants | 9:00-23:00  |         8 |
| Restaurants | 10:00-4:00  |         2 |
| Restaurants | 9:00-4:00   |         2 |
+-------------+-------------+-----------+

- 4-5 stars restaurants:
+-------------+-------------+-----------+
| category    | open_hours  | frequency |
+-------------+-------------+-----------+
| Restaurants | 18:00-23:00 |        12 |
+-------------+-------------+-----------+

ii. Do the two groups you chose to analyze have a different number of reviews?
    4-5 stars restaurants in Toronto have more reviews on average (about double) than 2-3 stars restaurants
     
+-----------+---------+-------------+---------------+--------------+------------+
| star_rank | city    | category    | company_count | total_review | avg_review |
+-----------+---------+-------------+---------------+--------------+------------+
| 2-3 stars | Toronto | Restaurants |             4 |           89 |      22.25 |
| 4-5 stars | Toronto | Restaurants |             5 |          206 |       41.2 |
+-----------+---------+-------------+---------------+--------------+------------+  
       
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
4-5 stars restaurants are more apart from each other whereas 2-3 stars restaurants are more likely to be located in the same area

+-----------+-------------+
| star_rank | postal_code |
+-----------+-------------+
| 2-3 stars | M4B 2L9     |
| 2-3 stars | M5B 2E5     |
| 2-3 stars | M5H 1X6     |
| 2-3 stars | M6B         |
| 4-5 stars | M6C 1B6     |
| 4-5 stars | M6P 1A6     |
| 4-5 stars | M9A 1C2     |
| 4-5 stars | M2N 5R6     |
| 4-5 stars | M5V         |
+-----------+-------------+


SQL code used for analysis:
— For 2-3 stars restaurants
SELECT category, TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') as open_hours, 
    count(id) as frequency
FROM hours h 
INNER JOIN (SELECT * 
            FROM business 
            INNER JOIN category 
            ON id == business_id) a
ON a.id == h.business_id
GROUP BY open_hours
HAVING city == 'Toronto' AND stars IN (2,2.5,3) AND category == 'Restaurants'
ORDER BY frequency DESC

— Hours for 4-5 stars restaurants
SELECT category, TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') as open_hours, 
    count(id) as frequency
FROM hours h 
INNER JOIN (SELECT * 
            FROM business 
            INNER JOIN category 
            ON id == business_id) a
ON a.id == h.business_id
GROUP BY open_hours
HAVING city == 'Toronto' AND stars IN (4,4.5,5) AND category == 'Restaurants'
ORDER BY frequency DESC


— Number of reviews comparison		
SELECT  CASE WHEN stars >= 4 THEN "4-5 stars"
             WHEN stars >= 2 THEN "2-3 stars"
             ELSE "below 2"
             END star_rank,
        city, 
        category,
        COUNT(id) AS company_count,
        SUM(review_count) AS total_review,
        AVG(review_count) AS avg_review
FROM business
INNER JOIN category 
ON id = business_id
WHERE city = "Toronto" AND category = "Restaurants" AND star_rank != 'below 2'
GROUP BY star_rank
		
— Location Comparison:
SELECT  CASE WHEN stars >= 4 THEN "4-5 stars"
             WHEN stars >= 2 THEN "2-3 stars"
             ELSE "below 2"
             END star_rank,
             postal_code
FROM business
INNER JOIN category 
ON id = business_id
WHERE city = "Toronto" AND category = "Restaurants" AND star_rank != 'below 2'
ORDER BY star_rank



2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Open restaurants have more review on average than the one that is closed
         
ii. Difference 2: Open restaurants have higher rated stars
         
         
SQL code used for analysis:
SELECT is_open, AVG(review_count) as avg_review, AVG(stars) as avg_stars 
FROM business 
GROUP BY is_open

+---------+---------------+---------------+
| is_open |    avg_review |     avg_stars |
+---------+---------------+---------------+
|       0 | 23.1980263158 | 3.52039473684 |
|       1 | 31.7570754717 | 3.67900943396 |
+---------+---------------+---------------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
  I will analyze which business categories are most favorable for each state based on percentage number of positive reviews per open business      
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
   In order to perform the analysis, we need data such as the state that the business category is located, total number of positive reviews for each business category, and total number of open business in that category in that state. To reduce bias, we will calculate the percentage of positive reviews of all opening businesses. Also, we will need to add an additional column in review table to evaluate if it is a positive review based on some keywords and join review table, business table, and category table to get all the necessary variables. 
	Lastly, we will sort the result data based on state and percentage of positive reviews to see which business categories will be most likely to be favorable in a state. 
	Due to limited data, we need to be cautious when proceeding with this analysis result. 
                  
iii. Output of your finished dataset:
         
SELECT a.state, a.category, 
        SUM(review_quality) as total_postive_reviews, 
        SUM(a.is_open) as total_open_businesses,
        SUM(review_quality)*100 / SUM(a.is_open) as pct_postive_reviews

FROM    (SELECT *, 
            CASE WHEN (text LIKE '%love%') 
            OR (text LIKE '%like%') 
            OR (text LIKE '%good%')
            OR (text LIKE '%great%')
            OR (text LIKE '%awesome%')
            OR (text LIKE '%perfect%') THEN 1
                ELSE 0
            END AS review_quality 
        FROM review) r

INNER JOIN (SELECT * FROM business
            INNER JOIN category 
            ON id = business_id) a 

ON r.business_id == a.id
GROUP BY a.state, a.category
ORDER BY a.state, pct_postive_reviews DESC

        
iv. Provide the SQL code you used to create your final dataset:

+---------+------------------------+-----------------------+-----------------------+---------------------+
| a.state | a.category             | total_postive_reviews | total_open_businesses | pct_postive_reviews |
+---------+------------------------+-----------------------+-----------------------+---------------------+
| AZ      | American (Traditional) |                     3 |                     3 |                 100 |
| AZ      | Barbeque               |                     3 |                     3 |                 100 |
| AZ      | Bars                   |                     3 |                     3 |                 100 |
| AZ      | Food                   |                     3 |                     3 |                 100 |
| AZ      | Nightlife              |                     3 |                     3 |                 100 |
| AZ      | Smokehouse             |                     3 |                     3 |                 100 |
| AZ      | Restaurants            |                     4 |                     5 |                  80 |
| AZ      | Breakfast & Brunch     |                     1 |                     2 |                  50 |
| NV      | Asian Fusion           |                     2 |                     2 |                 100 |
| NV      | Chinese                |                     2 |                     2 |                 100 |
| NV      | Malaysian              |                     2 |                     2 |                 100 |
| NV      | Noodles                |                     2 |                     2 |                 100 |
| NV      | Restaurants            |                     2 |                     2 |                 100 |
| NV      | Soup                   |                     2 |                     2 |                 100 |
| NV      | Taiwanese              |                     2 |                     2 |                 100 |
| OH      | Indian                 |                     1 |                     1 |                 100 |
| OH      | Pakistani              |                     1 |                     1 |                 100 |
| OH      | Ethnic Food            |                     1 |                     2 |                  50 |
| OH      | Farmers Market         |                     1 |                     2 |                  50 |
| OH      | Food                   |                     1 |                     2 |                  50 |
| OH      | Fruits & Veggies       |                     1 |                     2 |                  50 |
| OH      | Market Stalls          |                     1 |                     2 |                  50 |
| OH      | Meat Shops             |                     1 |                     2 |                  50 |
| OH      | Public Markets         |                     1 |                     2 |                  50 |
| OH      | Restaurants            |                     1 |                     2 |                  50 |
+---------+------------------------+-----------------------+-----------------------+---------------------+
(Output limit exceeded, 25 of 38 total rows shown)